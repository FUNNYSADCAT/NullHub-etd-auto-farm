local player = game.Players.LocalPlayer -- สมมติว่าคุณใช้ LocalPlayer

-- ฟังก์ชันสำหรับตรวจสอบ Gold
local function hasEnoughGold(amount)
    if workspace.PlayerStats:FindFirstChild(player.Name) and 
       workspace.PlayerStats[player.Name]:FindFirstChild("Gold") and 
       workspace.PlayerStats[player.Name].Gold.Value >= amount then
        return true
    end
    return false
end

-- ฟังก์ชันสำหรับส่งคำสั่ง ChangeMode
local function changeMode(name, position, angles, towerName)
    local args = {
        [1] = name,
        [2] = position * angles,
        [3] = towerName and workspace.Towers:FindFirstChild(towerName) or nil
    }
    game:GetService("ReplicatedStorage").Functions.SpawnTower:InvokeServer(unpack(args))
end

-- ขั้นตอนการอัปเกรด
local upgrades = {
    {name = "Kachapond box1", gold = 0, position = CFrame.new(1.9485206604003906, 4.986931800842285, 12.805196762084961), angles = CFrame.Angles(0, 0, 0), tower = nil},
    {name = "Kachapond box2", gold = 700, position = CFrame.new(1.9485206604003906, 4.986931800842285, 12.805196762084961), angles = CFrame.Angles(-3.1415927410125732, 0.3082665503025055, -3.1415927410125732), tower = "Kachapond box1"},
    {name = "Kachapond box3(MAX)", gold = 1500, position = CFrame.new(1.9485206604003906, 4.986931800842285, 12.805196762084961), angles = CFrame.Angles(-3.1415927410125732, -0.5998259782791138, -3.1415927410125732), tower = "Kachapond box2"},
}

-- ทำงานตามขั้นตอน
for i, upgrade in ipairs(upgrades) do
    if i == 1 then
        -- ทำงานส่วนแรกทันทีโดยไม่ตรวจสอบ Gold
        changeMode(upgrade.name, upgrade.position, upgrade.angles, upgrade.tower)
    else
        -- รอจนกว่า Gold จะเพียงพอในส่วนที่เหลือ
        while not hasEnoughGold(upgrade.gold) do
            task.wait(0.1)
        end
        changeMode(upgrade.name, upgrade.position, upgrade.angles, upgrade.tower)
    end
end

local player = game.Players.LocalPlayer -- สมมติว่าคุณใช้ LocalPlayer

-- ฟังก์ชันสำหรับตรวจสอบ Gold
local function hasEnoughGold(amount)
    local playerStats = workspace.PlayerStats:FindFirstChild(player.Name)
    if playerStats and playerStats:FindFirstChild("Gold") then
        if playerStats.Gold.Value >= amount then
            return true
        end
    end
    return false
end
